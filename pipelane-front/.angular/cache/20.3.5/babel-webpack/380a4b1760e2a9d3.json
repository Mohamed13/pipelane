{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { computed, inject, signal } from '@angular/core';\nimport { FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ApiService } from '../../core/api.service';\nimport { PolicyService } from '../../core/policy.service';\nimport { ChannelLabels } from '../../core/models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/list\";\nimport * as i9 from \"@angular/material/chips\";\nimport * as i10 from \"@angular/material/progress-spinner\";\nfunction ConversationThreadComponent_mat_card_0_header_1_mat_chip_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 12);\n    i0.ɵɵtext(1, \"WhatsApp session active\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConversationThreadComponent_mat_card_0_header_1_mat_chip_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 13);\n    i0.ɵɵtext(1, \"Template required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConversationThreadComponent_mat_card_0_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"header\", 8)(1, \"div\")(2, \"h2\");\n    i0.ɵɵtext(3, \"Conversation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 9);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"mat-chip-set\");\n    i0.ɵɵtemplate(7, ConversationThreadComponent_mat_card_0_header_1_mat_chip_7_Template, 2, 0, \"mat-chip\", 10)(8, ConversationThreadComponent_mat_card_0_header_1_mat_chip_8_Template, 2, 0, \"mat-chip\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const conv_r1 = ctx.ngIf;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"Channel: \", ctx_r1.primaryChannelLabel(conv_r1));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.canText());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.canText());\n  }\n}\nfunction ConversationThreadComponent_mat_card_0_section_2_div_1_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"uppercase\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, message_r3.type));\n  }\n}\nfunction ConversationThreadComponent_mat_card_0_section_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"span\", 18);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 19);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 20);\n    i0.ɵɵtemplate(8, ConversationThreadComponent_mat_card_0_section_2_div_1_div_8_Template, 3, 3, \"div\", 21);\n    i0.ɵɵelementStart(9, \"div\", 22);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 23);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const message_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassProp(\"message--outgoing\", message_r3.direction === \"out\")(\"message--incoming\", message_r3.direction === \"in\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.ChannelLabels[message_r3.channel]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(6, 9, message_r3.createdAt, \"short\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", message_r3.type !== \"text\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.renderPayload(message_r3));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Status: \", message_r3.status);\n  }\n}\nfunction ConversationThreadComponent_mat_card_0_section_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 14);\n    i0.ɵɵtemplate(1, ConversationThreadComponent_mat_card_0_section_2_div_1_Template, 13, 12, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_4_0;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", (tmp_4_0 = ctx_r1.conversation()) == null ? null : tmp_4_0.messages);\n  }\n}\nfunction ConversationThreadComponent_mat_card_0_section_4_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 27);\n    i0.ɵɵlistener(\"ngSubmit\", function ConversationThreadComponent_mat_card_0_section_4_form_1_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.sendText());\n    });\n    i0.ɵɵelementStart(1, \"mat-form-field\", 28)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Message\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"textarea\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 30)(6, \"mat-icon\");\n    i0.ɵɵtext(7, \"send\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \" Send \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r1.textControl);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", ctx_r1.textControl.invalid || ctx_r1.sending());\n  }\n}\nfunction ConversationThreadComponent_mat_card_0_section_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 27);\n    i0.ɵɵlistener(\"ngSubmit\", function ConversationThreadComponent_mat_card_0_section_4_ng_template_2_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.sendTemplate());\n    });\n    i0.ɵɵelementStart(1, \"mat-form-field\", 28)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Template name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 9);\n    i0.ɵɵtext(6, \"WhatsApp text is disabled outside the 24h session. Send an approved template.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 30)(8, \"mat-icon\");\n    i0.ɵɵtext(9, \"send\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \" Send template \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r1.templateControl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.templateControl.invalid || ctx_r1.sending());\n  }\n}\nfunction ConversationThreadComponent_mat_card_0_section_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 25);\n    i0.ɵɵtemplate(1, ConversationThreadComponent_mat_card_0_section_4_form_1_Template, 9, 2, \"form\", 26)(2, ConversationThreadComponent_mat_card_0_section_4_ng_template_2_Template, 11, 2, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const templateMode_r6 = i0.ɵɵreference(3);\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.canText())(\"ngIfElse\", templateMode_r6);\n  }\n}\nfunction ConversationThreadComponent_mat_card_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 4);\n    i0.ɵɵtemplate(1, ConversationThreadComponent_mat_card_0_header_1_Template, 9, 3, \"header\", 5)(2, ConversationThreadComponent_mat_card_0_section_2_Template, 2, 1, \"section\", 6);\n    i0.ɵɵelement(3, \"mat-divider\");\n    i0.ɵɵtemplate(4, ConversationThreadComponent_mat_card_0_section_4_Template, 4, 2, \"section\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_4_0;\n    const ctx_r1 = i0.ɵɵnextContext();\n    const empty_r7 = i0.ɵɵreference(4);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.conversation());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx_r1.conversation()) == null ? null : tmp_4_0.messages == null ? null : tmp_4_0.messages.length)(\"ngIfElse\", empty_r7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.conversation());\n  }\n}\nfunction ConversationThreadComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelement(1, \"mat-progress-spinner\", 33);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Loading conversation\\u2026\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ConversationThreadComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"chat_bubble_outline\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"No messages yet.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let ConversationThreadComponent = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class ConversationThreadComponent {\n    constructor() {\n      this.route = inject(ActivatedRoute);\n      this.api = inject(ApiService);\n      this.policy = inject(PolicyService);\n      this.ChannelLabels = ChannelLabels;\n      this.contactId = this.route.snapshot.paramMap.get('contactId');\n      this.conversation = signal(null, ...(ngDevMode ? [{\n        debugName: \"conversation\"\n      }] : []));\n      this.sending = signal(false, ...(ngDevMode ? [{\n        debugName: \"sending\"\n      }] : []));\n      this.textControl = new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required, Validators.minLength(1)]\n      });\n      this.templateControl = new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required, Validators.minLength(3)]\n      });\n      this.canText = computed(() => {\n        const convo = this.conversation();\n        if (!convo?.messages?.length) return false;\n        const lastInbound = [...convo.messages].filter(m => m.direction === 'in').slice(-1)[0]?.createdAt;\n        return this.policy.isWhatsAppTextAllowed(lastInbound ?? null);\n      }, ...(ngDevMode ? [{\n        debugName: \"canText\"\n      }] : []));\n      this.fetchConversation();\n    }\n    primaryChannelLabel(conversation) {\n      const first = conversation.messages[0];\n      return first ? ChannelLabels[first.channel] : 'Unknown channel';\n    }\n    sendText() {\n      if (this.textControl.invalid) return;\n      this.sending.set(true);\n      this.api.sendMessage({\n        contactId: this.contactId,\n        channel: 'whatsapp',\n        type: 'text',\n        text: this.textControl.value.trim()\n      }).subscribe({\n        next: () => {\n          this.textControl.reset('');\n          this.fetchConversation();\n        },\n        error: () => this.sending.set(false)\n      });\n    }\n    sendTemplate() {\n      if (this.templateControl.invalid) return;\n      this.sending.set(true);\n      this.api.sendMessage({\n        contactId: this.contactId,\n        channel: 'whatsapp',\n        type: 'template',\n        templateName: this.templateControl.value.trim()\n      }).subscribe({\n        next: () => {\n          this.templateControl.reset('');\n          this.fetchConversation();\n        },\n        error: () => this.sending.set(false)\n      });\n    }\n    renderPayload(message) {\n      if (!message.payloadJson) return '';\n      try {\n        const parsed = JSON.parse(message.payloadJson);\n        return typeof parsed === 'string' ? parsed : JSON.stringify(parsed, null, 2);\n      } catch {\n        return message.payloadJson;\n      }\n    }\n    fetchConversation() {\n      this.api.getConversation(this.contactId).subscribe({\n        next: response => {\n          this.conversation.set({\n            conversationId: response.conversationId,\n            messages: response.messages ?? []\n          });\n          this.sending.set(false);\n        },\n        error: () => {\n          this.conversation.set({\n            conversationId: undefined,\n            messages: []\n          });\n          this.sending.set(false);\n        }\n      });\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function ConversationThreadComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ConversationThreadComponent)();\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ConversationThreadComponent,\n      selectors: [[\"pl-conversation-thread\"]],\n      decls: 5,\n      vars: 2,\n      consts: [[\"loading\", \"\"], [\"empty\", \"\"], [\"templateMode\", \"\"], [\"class\", \"surface-card\", 4, \"ngIf\", \"ngIfElse\"], [1, \"surface-card\"], [\"class\", \"header\", 4, \"ngIf\"], [\"class\", \"messages\", 4, \"ngIf\", \"ngIfElse\"], [\"class\", \"composer\", 4, \"ngIf\"], [1, \"header\"], [1, \"body-text-muted\"], [\"color\", \"primary\", \"selected\", \"\", 4, \"ngIf\"], [\"color\", \"warn\", \"selected\", \"\", 4, \"ngIf\"], [\"color\", \"primary\", \"selected\", \"\"], [\"color\", \"warn\", \"selected\", \"\"], [1, \"messages\"], [\"class\", \"message\", 3, \"message--outgoing\", \"message--incoming\", 4, \"ngFor\", \"ngForOf\"], [1, \"message\"], [1, \"meta\"], [1, \"meta__channel\"], [1, \"meta__time\"], [1, \"bubble\"], [\"class\", \"bubble__type\", 4, \"ngIf\"], [1, \"bubble__body\"], [1, \"bubble__status\"], [1, \"bubble__type\"], [1, \"composer\"], [\"class\", \"message-form\", 3, \"ngSubmit\", 4, \"ngIf\", \"ngIfElse\"], [1, \"message-form\", 3, \"ngSubmit\"], [\"appearance\", \"outline\", 1, \"w-100\"], [\"matInput\", \"\", \"rows\", \"2\", \"placeholder\", \"Type a message...\", 3, \"formControl\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [\"matInput\", \"\", \"placeholder\", \"e.g. welcome_new_user\", 3, \"formControl\"], [1, \"loading\"], [\"diameter\", \"48\", \"mode\", \"indeterminate\"], [1, \"empty\"]],\n      template: function ConversationThreadComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, ConversationThreadComponent_mat_card_0_Template, 5, 4, \"mat-card\", 3)(1, ConversationThreadComponent_ng_template_1_Template, 4, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(3, ConversationThreadComponent_ng_template_3_Template, 5, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const loading_r8 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.conversation())(\"ngIfElse\", loading_r8);\n        }\n      },\n      dependencies: [CommonModule, i1.NgForOf, i1.NgIf, ReactiveFormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormControlDirective, MatCardModule, i3.MatCard, MatIconModule, i4.MatIcon, MatButtonModule, i5.MatButton, MatFormFieldModule, i6.MatFormField, i6.MatLabel, MatInputModule, i7.MatInput, MatDividerModule, i8.MatDivider, MatChipsModule, i9.MatChip, i9.MatChipSet, MatProgressSpinnerModule, i10.MatProgressSpinner, i1.UpperCasePipe, i1.DatePipe],\n      styles: [\".header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:var(--space-4)}.messages[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:var(--space-3);margin-bottom:var(--space-4)}.message[_ngcontent-%COMP%]{display:flex;flex-direction:column;max-width:70%}.message--outgoing[_ngcontent-%COMP%]{margin-left:auto;align-items:flex-end}.message--incoming[_ngcontent-%COMP%]{align-items:flex-start}.meta[_ngcontent-%COMP%]{display:flex;gap:var(--space-2);font-size:.8rem;color:var(--color-text-muted);margin-bottom:var(--space-1)}.bubble[_ngcontent-%COMP%]{padding:var(--space-3);border-radius:var(--radius-md);background:var(--color-surface-alt);box-shadow:var(--elevation-1)}.message--outgoing[_ngcontent-%COMP%]   .bubble[_ngcontent-%COMP%]{background:#6366f126}.bubble__type[_ngcontent-%COMP%]{font-size:.75rem;text-transform:uppercase;letter-spacing:.05em;color:var(--color-text-muted);margin-bottom:var(--space-1)}.bubble__body[_ngcontent-%COMP%]{white-space:pre-wrap}.bubble__status[_ngcontent-%COMP%]{font-size:.75rem;color:var(--color-text-muted);margin-top:var(--space-2)}.composer[_ngcontent-%COMP%]{margin-top:var(--space-4)}.message-form[_ngcontent-%COMP%]{display:flex;gap:var(--space-3);align-items:flex-end;flex-wrap:wrap}.w-100[_ngcontent-%COMP%]{flex:1 1 240px}.loading[_ngcontent-%COMP%], .empty[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:var(--space-3);padding:var(--space-6);color:var(--color-text-muted)}.empty[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{font-size:3rem;height:auto;width:auto}\"],\n      changeDetection: 0\n    }));\n  }\n  _staticBlock();\n  return ConversationThreadComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}