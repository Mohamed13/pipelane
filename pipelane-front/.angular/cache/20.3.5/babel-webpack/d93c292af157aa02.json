{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { inject, signal } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormsModule } from '@angular/forms';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\nimport { I18nService } from './core/i18n.service';\nimport { ThemeService } from './core/theme.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/sidenav\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"@angular/material/list\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/slide-toggle\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nconst _c0 = [\"snav\"];\nexport let AppComponent = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class AppComponent {\n    constructor() {\n      this.i18n = inject(I18nService);\n      this.themeSvc = inject(ThemeService);\n      this.bp = inject(BreakpointObserver);\n      this.lang = this.i18n.lang;\n      this.theme = this.themeSvc.theme;\n      this.search = '';\n      this.opened = signal(JSON.parse(localStorage.getItem('snav_opened') ?? 'true'), ...(ngDevMode ? [{\n        debugName: \"opened\"\n      }] : []));\n      this.sidenavMode = signal('side', ...(ngDevMode ? [{\n        debugName: \"sidenavMode\"\n      }] : []));\n      this.bp.observe([Breakpoints.Medium, Breakpoints.Small, Breakpoints.Handset]).pipe(takeUntilDestroyed()).subscribe(state => {\n        const isHandset = state.breakpoints[Breakpoints.Handset] || state.breakpoints[Breakpoints.Small];\n        this.sidenavMode.set(isHandset ? 'over' : 'side');\n        if (isHandset) {\n          this.opened.set(false);\n        } else {\n          const stored = JSON.parse(localStorage.getItem('snav_opened') ?? 'true');\n          this.opened.set(stored);\n        }\n      });\n    }\n    setLang(l) {\n      this.i18n.setLang(l);\n    }\n    toggleTheme() {\n      this.themeSvc.toggle();\n    }\n    changeLang(event) {\n      const value = event.target.value;\n      this.setLang(value);\n    }\n    toggleSidenav() {\n      if (this.sidenavMode() === 'over') {\n        this.sidenav?.toggle();\n      } else {\n        this.onOpenedChange(!this.opened());\n      }\n    }\n    onOpenedChange(val) {\n      this.opened.set(val);\n      localStorage.setItem('snav_opened', JSON.stringify(val));\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function AppComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AppComponent)();\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      viewQuery: function AppComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sidenav = _t.first);\n        }\n      },\n      decls: 57,\n      vars: 6,\n      consts: [[\"snav\", \"\"], [\"outlet\", \"outlet\"], [1, \"shell-container\"], [3, \"openedChange\", \"mode\", \"opened\"], [1, \"brand\"], [\"mat-list-item\", \"\", \"routerLink\", \"/analytics\", \"routerLinkActive\", \"active\"], [\"mat-list-item\", \"\", \"routerLink\", \"/onboarding\", \"routerLinkActive\", \"active\"], [\"mat-list-item\", \"\", \"routerLink\", \"/templates\", \"routerLinkActive\", \"active\"], [\"mat-list-item\", \"\", \"routerLink\", \"/contacts\", \"routerLinkActive\", \"active\"], [\"mat-list-item\", \"\", \"routerLink\", \"/campaigns\", \"routerLinkActive\", \"active\"], [\"mat-list-item\", \"\", \"routerLink\", \"/settings\", \"routerLinkActive\", \"active\"], [1, \"toolbar\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Toggle sidenav\", 3, \"click\"], [1, \"title\"], [1, \"spacer\"], [\"appearance\", \"outline\", \"floatLabel\", \"never\", 1, \"search\"], [\"matPrefix\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Search\", 3, \"ngModelChange\", \"ngModel\"], [\"aria-label\", \"Toggle dark mode\", 3, \"change\", \"checked\"], [1, \"lang\", 3, \"change\", \"value\"], [\"value\", \"en\"], [\"value\", \"fr\"], [1, \"content\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"mat-sidenav-container\", 2)(1, \"mat-sidenav\", 3, 0);\n          i0.ɵɵlistener(\"openedChange\", function AppComponent_Template_mat_sidenav_openedChange_1_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onOpenedChange($event));\n          });\n          i0.ɵɵelementStart(3, \"div\", 4);\n          i0.ɵɵtext(4, \"Pipelane\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"mat-nav-list\")(6, \"a\", 5)(7, \"mat-icon\");\n          i0.ɵɵtext(8, \"analytics\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"span\");\n          i0.ɵɵtext(10, \"Analytics\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"a\", 6)(12, \"mat-icon\");\n          i0.ɵɵtext(13, \"settings\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"span\");\n          i0.ɵɵtext(15, \"Onboarding\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"a\", 7)(17, \"mat-icon\");\n          i0.ɵɵtext(18, \"view_list\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"span\");\n          i0.ɵɵtext(20, \"Templates\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"a\", 8)(22, \"mat-icon\");\n          i0.ɵɵtext(23, \"people\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"span\");\n          i0.ɵɵtext(25, \"Contacts\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(26, \"a\", 9)(27, \"mat-icon\");\n          i0.ɵɵtext(28, \"flag\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"span\");\n          i0.ɵɵtext(30, \"Campaigns\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(31, \"a\", 10)(32, \"mat-icon\");\n          i0.ɵɵtext(33, \"tune\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"span\");\n          i0.ɵɵtext(35, \"Settings\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(36, \"mat-sidenav-content\")(37, \"mat-toolbar\", 11)(38, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_38_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.toggleSidenav());\n          });\n          i0.ɵɵelementStart(39, \"mat-icon\");\n          i0.ɵɵtext(40, \"menu\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(41, \"span\", 13);\n          i0.ɵɵtext(42, \"Pipelane Console\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(43, \"span\", 14);\n          i0.ɵɵelementStart(44, \"mat-form-field\", 15)(45, \"mat-icon\", 16);\n          i0.ɵɵtext(46, \"search\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"input\", 17);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_47_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.search, $event) || (ctx.search = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(48, \"mat-slide-toggle\", 18);\n          i0.ɵɵlistener(\"change\", function AppComponent_Template_mat_slide_toggle_change_48_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.toggleTheme());\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(49, \"select\", 19);\n          i0.ɵɵlistener(\"change\", function AppComponent_Template_select_change_49_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.changeLang($event));\n          });\n          i0.ɵɵelementStart(50, \"option\", 20);\n          i0.ɵɵtext(51, \"EN\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(52, \"option\", 21);\n          i0.ɵɵtext(53, \"FR\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(54, \"main\", 22);\n          i0.ɵɵelement(55, \"router-outlet\", null, 1);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          const outlet_r2 = i0.ɵɵreference(56);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"mode\", ctx.sidenavMode())(\"opened\", ctx.opened());\n          i0.ɵɵadvance(46);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.search);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"checked\", ctx.theme() === \"dark\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"value\", ctx.lang());\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"@routeAnimations\", outlet_r2.activatedRoute == null ? null : outlet_r2.activatedRoute.routeConfig == null ? null : outlet_r2.activatedRoute.routeConfig.path);\n        }\n      },\n      dependencies: [RouterOutlet, RouterLink, RouterLinkActive, CommonModule, FormsModule, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel, MatSidenavModule, i2.MatSidenav, i2.MatSidenavContainer, i2.MatSidenavContent, MatToolbarModule, i3.MatToolbar, MatListModule, i4.MatNavList, i4.MatListItem, MatIconModule, i5.MatIcon, MatButtonModule, i6.MatIconButton, MatSlideToggleModule, i7.MatSlideToggle, MatFormFieldModule, i8.MatFormField, i8.MatPrefix, MatInputModule, i9.MatInput],\n      encapsulation: 2,\n      data: {\n        animation: [trigger('routeAnimations', [transition('* <=> *', [style({\n          opacity: 0,\n          transform: 'translateY(8px)'\n        }), animate('220ms ease-out', style({\n          opacity: 1,\n          transform: 'translateY(0)'\n        }))])])]\n      },\n      changeDetection: 0\n    }));\n  }\n  _staticBlock();\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}