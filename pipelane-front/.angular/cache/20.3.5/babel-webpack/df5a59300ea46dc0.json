{"ast":null,"code":"import { JsonPipe, NgIf } from '@angular/common';\nimport { inject, signal, computed } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ApiService } from '../../core/api.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/card\";\nimport * as i2 from \"@angular/material/expansion\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/chips\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nfunction TemplatesListComponent_mat_progress_spinner_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-spinner\", 7);\n  }\n}\nfunction TemplatesListComponent_ng_container_12_mat_accordion_1_mat_expansion_panel_1_mat_chip_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 15);\n    i0.ɵɵtext(1, \"Active\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TemplatesListComponent_ng_container_12_mat_accordion_1_mat_expansion_panel_1_mat_chip_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const template_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(template_r2.category);\n  }\n}\nfunction TemplatesListComponent_ng_container_12_mat_accordion_1_mat_expansion_panel_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-expansion-panel\", 10)(1, \"mat-expansion-panel-header\")(2, \"mat-panel-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-panel-description\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"titlecase\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 11)(8, \"mat-chip\", 12);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-chip\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, TemplatesListComponent_ng_container_12_mat_accordion_1_mat_expansion_panel_1_mat_chip_12_Template, 2, 0, \"mat-chip\", 13)(13, TemplatesListComponent_ng_container_12_mat_accordion_1_mat_expansion_panel_1_mat_chip_13_Template, 2, 1, \"mat-chip\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"pre\");\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"json\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"p\", 14);\n    i0.ɵɵtext(18);\n    i0.ɵɵpipe(19, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const template_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", template_r2.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(6, 9, template_r2.channel), \" \\u00B7 \", template_r2.lang.toUpperCase(), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(template_r2.channel);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(template_r2.lang);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", template_r2.isActive);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", template_r2.category);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 11, template_r2.coreSchemaJson));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Updated \", i0.ɵɵpipeBind2(19, 13, template_r2.updatedAtUtc, \"medium\"));\n  }\n}\nfunction TemplatesListComponent_ng_container_12_mat_accordion_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-accordion\");\n    i0.ɵɵtemplate(1, TemplatesListComponent_ng_container_12_mat_accordion_1_mat_expansion_panel_1_Template, 20, 16, \"mat-expansion-panel\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.templates());\n  }\n}\nfunction TemplatesListComponent_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TemplatesListComponent_ng_container_12_mat_accordion_1_Template, 2, 1, \"mat-accordion\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    const empty_r4 = i0.ɵɵreference(14);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.templates().length)(\"ngIfElse\", empty_r4);\n  }\n}\nfunction TemplatesListComponent_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"inventory_2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"No templates found.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let TemplatesListComponent = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class TemplatesListComponent {\n    constructor() {\n      this.api = inject(ApiService);\n      this.templatesSignal = signal([], ...(ngDevMode ? [{\n        debugName: \"templatesSignal\"\n      }] : []));\n      this.loading = signal(true, ...(ngDevMode ? [{\n        debugName: \"loading\"\n      }] : []));\n      this.templates = computed(() => this.templatesSignal(), ...(ngDevMode ? [{\n        debugName: \"templates\"\n      }] : []));\n      this.loadTemplates();\n    }\n    refresh() {\n      this.loading.set(true);\n      this.api.refreshTemplates().subscribe({\n        next: () => this.loadTemplates(false),\n        error: () => {\n          this.loading.set(false);\n        }\n      });\n    }\n    loadTemplates(showSpinner = true) {\n      if (showSpinner) this.loading.set(true);\n      this.api.getTemplates().subscribe({\n        next: templates => {\n          this.templatesSignal.set(templates ?? []);\n          this.loading.set(false);\n        },\n        error: () => {\n          this.templatesSignal.set([]);\n          this.loading.set(false);\n        }\n      });\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function TemplatesListComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TemplatesListComponent)();\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TemplatesListComponent,\n      selectors: [[\"pl-templates-list\"]],\n      decls: 15,\n      vars: 3,\n      consts: [[\"empty\", \"\"], [1, \"surface-card\"], [1, \"header\"], [1, \"body-text-muted\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", 3, \"click\", \"disabled\"], [\"diameter\", \"40\", \"mode\", \"indeterminate\", 4, \"ngIf\"], [4, \"ngIf\"], [\"diameter\", \"40\", \"mode\", \"indeterminate\"], [4, \"ngIf\", \"ngIfElse\"], [\"class\", \"template-panel\", 4, \"ngFor\", \"ngForOf\"], [1, \"template-panel\"], [1, \"chip-row\"], [\"color\", \"primary\", \"selected\", \"\"], [\"color\", \"accent\", \"selected\", \"\", 4, \"ngIf\"], [1, \"body-text-muted\", \"small\"], [\"color\", \"accent\", \"selected\", \"\"], [1, \"empty\"]],\n      template: function TemplatesListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"mat-card\", 1)(1, \"div\", 2)(2, \"div\")(3, \"h2\");\n          i0.ɵɵtext(4, \"Templates\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\", 3);\n          i0.ɵɵtext(6, \"Manage messaging templates across channels.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function TemplatesListComponent_Template_button_click_7_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.refresh());\n          });\n          i0.ɵɵelementStart(8, \"mat-icon\");\n          i0.ɵɵtext(9, \"refresh\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(10, \" Refresh \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(11, TemplatesListComponent_mat_progress_spinner_11_Template, 1, 0, \"mat-progress-spinner\", 5)(12, TemplatesListComponent_ng_container_12_Template, 2, 2, \"ng-container\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(13, TemplatesListComponent_ng_template_13_Template, 5, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"disabled\", ctx.loading());\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading());\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading());\n        }\n      },\n      dependencies: [NgIf, MatCardModule, i1.MatCard, MatExpansionModule, i2.MatAccordion, i2.MatExpansionPanel, i2.MatExpansionPanelHeader, i2.MatExpansionPanelTitle, i2.MatExpansionPanelDescription, MatButtonModule, i3.MatButton, MatIconModule, i4.MatIcon, MatChipsModule, i5.MatChip, MatProgressSpinnerModule, i6.MatProgressSpinner, JsonPipe],\n      styles: [\".header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:var(--space-4)}.template-panel[_ngcontent-%COMP%]{border-radius:var(--radius-md);margin-bottom:var(--space-3)}.chip-row[_ngcontent-%COMP%]{display:flex;gap:var(--space-2);margin-bottom:var(--space-3);flex-wrap:wrap}pre[_ngcontent-%COMP%]{background:var(--color-surface-alt);padding:var(--space-3);border-radius:var(--radius-sm);overflow:auto}.empty[_ngcontent-%COMP%]{text-align:center;color:var(--color-text-muted);padding:var(--space-6);display:flex;flex-direction:column;gap:var(--space-3);align-items:center}.empty[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{font-size:3rem;height:auto;width:auto}mat-progress-spinner[_ngcontent-%COMP%]{margin:var(--space-5) auto;display:block}.small[_ngcontent-%COMP%]{font-size:.85rem}\"],\n      changeDetection: 0\n    }));\n  }\n  _staticBlock();\n  return TemplatesListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}