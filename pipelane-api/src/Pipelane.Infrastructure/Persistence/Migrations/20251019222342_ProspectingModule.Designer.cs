// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pipelane.Infrastructure.Persistence;

#nullable disable

namespace Pipelane.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251019222342_ProspectingModule")]
    partial class ProspectingModule
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pipelane.Domain.Entities.Campaign", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FallbackOrderJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrimaryChannel")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ScheduledAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("SegmentJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "ScheduledAtUtc")
                        .HasDatabaseName("IX_campaigns_tenant_scheduled");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.ChannelSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Channel")
                        .HasColumnType("int");

                    b.Property<string>("SettingsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Channel")
                        .IsUnique();

                    b.ToTable("ChannelSettings");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Consent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Channel")
                        .HasColumnType("int");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MetaJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OptInAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContactId", "Channel")
                        .IsUnique()
                        .HasDatabaseName("IX_consents_contact_channel");

                    b.ToTable("Consents");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TagsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("TenantId", "Phone")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Conversation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrimaryChannel")
                        .HasColumnType("int");

                    b.Property<string>("ProviderThreadId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "ContactId");

                    b.HasIndex("TenantId", "ProviderThreadId");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Conversion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RevenueAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "CampaignId", "RevenueAtUtc");

                    b.HasIndex("TenantId", "ContactId", "RevenueAtUtc");

                    b.ToTable("Conversions");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PayloadJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Source")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "CreatedAt")
                        .HasDatabaseName("IX_events_tenant_created");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.FollowupTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CompletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MessageId")
                        .IsUnique()
                        .HasDatabaseName("IX_FollowupTasks_Message")
                        .HasFilter("[MessageId] IS NOT NULL");

                    b.HasIndex("TenantId", "ContactId", "Completed")
                        .HasDatabaseName("IX_FollowupTasks_Tenant_Contact_Completed");

                    b.ToTable("FollowupTasks");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.LeadScore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProspectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReasonsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scope")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "ContactId")
                        .IsUnique()
                        .HasDatabaseName("IX_LeadScores_Tenant_Contact")
                        .HasFilter("[ContactId] IS NOT NULL");

                    b.HasIndex("TenantId", "ProspectId")
                        .IsUnique()
                        .HasDatabaseName("IX_LeadScores_Tenant_Prospect")
                        .HasFilter("[ProspectId] IS NOT NULL");

                    b.ToTable("LeadScores");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Channel")
                        .HasColumnType("int");

                    b.Property<Guid>("ConversationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliveredAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.Property<string>("ErrorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FailedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OpenedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PayloadJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderMessageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TemplateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId", "CreatedAt")
                        .HasDatabaseName("IX_messages_conversation_created");

                    b.HasIndex("TenantId", "ProviderMessageId")
                        .IsUnique()
                        .HasDatabaseName("IX_Messages_TenantId_ProviderMessageId")
                        .HasFilter("[ProviderMessageId] IS NOT NULL");

                    b.HasIndex("TenantId", "Channel", "CreatedAt");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.MessageEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Provider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderEventId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Raw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("Provider", "ProviderEventId")
                        .IsUnique()
                        .HasDatabaseName("IX_MessageEvents_Provider_EventId")
                        .HasFilter("[ProviderEventId] IS NOT NULL");

                    b.HasIndex("TenantId", "MessageId", "CreatedAt")
                        .HasDatabaseName("IX_MessageEvents_Tenant_Message_Created");

                    b.ToTable("MessageEvents");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Attempts")
                        .HasColumnType("int");

                    b.Property<int>("Channel")
                        .HasColumnType("int");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConversationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LockedUntilUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxAttempts")
                        .HasColumnType("int");

                    b.Property<string>("MetaJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayloadJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ScheduledAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Status", "ScheduledAtUtc", "LockedUntilUtc", "CreatedAt");

                    b.ToTable("Outbox");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.EmailGeneration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CompletionTokens")
                        .HasColumnType("int");

                    b.Property<decimal?>("CostUsd")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("HtmlBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetadataJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PromptTokens")
                        .HasColumnType("int");

                    b.Property<string>("PromptUsed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProspectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StepId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Temperature")
                        .HasColumnType("decimal(4,3)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TextBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Variant")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("ProspectId");

                    b.HasIndex("StepId");

                    b.HasIndex("TenantId", "ProspectId", "StepId", "CreatedAtUtc")
                        .HasDatabaseName("IX_EmailGenerations_Prospect_Step_Created");

                    b.ToTable("EmailGenerations");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.Prospect", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomFieldsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("EnrichedJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Industry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastContactedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastRepliedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastSyncedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OptedOut")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OptedOutAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("OwnerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Persona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SequenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TagsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("SequenceId");

                    b.HasIndex("TenantId", "Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Prospects_Tenant_Email");

                    b.HasIndex("TenantId", "OwnerUserId")
                        .HasDatabaseName("IX_Prospects_Tenant_Owner");

                    b.HasIndex("TenantId", "Status")
                        .HasDatabaseName("IX_Prospects_Tenant_Status");

                    b.ToTable("Prospects");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.ProspectReply", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AutoReplyGenerationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AutoReplySendLogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AutoReplySuggested")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtractedDatesJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HtmlBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Intent")
                        .HasColumnType("int");

                    b.Property<double?>("IntentConfidence")
                        .HasColumnType("float");

                    b.Property<string>("MetadataJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProcessedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProspectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderMessageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReceivedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SendLogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StepId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TextBody")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutoReplyGenerationId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("ProspectId");

                    b.HasIndex("SendLogId");

                    b.HasIndex("StepId");

                    b.HasIndex("TenantId", "ProspectId", "ReceivedAtUtc")
                        .HasDatabaseName("IX_ProspectReplies_Tenant_Prospect_Received");

                    b.ToTable("ProspectReplies");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.ProspectingCampaign", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PausedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ScheduledAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("SegmentJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SequenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SettingsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SequenceId");

                    b.HasIndex("TenantId", "Status")
                        .HasDatabaseName("IX_ProspectingCampaigns_Tenant_Status");

                    b.ToTable("ProspectingCampaigns");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.ProspectingSequence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryCriteriaJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("OwnerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TargetPersona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name")
                        .IsUnique()
                        .HasDatabaseName("IX_ProspectingSequences_Tenant_Name");

                    b.ToTable("ProspectingSequences");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.ProspectingSequenceStep", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Channel")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("GuardrailInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetadataJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OffsetDays")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("PromptTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequiresApproval")
                        .HasColumnType("bit");

                    b.Property<TimeSpan?>("SendWindowEndUtc")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("SendWindowStartUtc")
                        .HasColumnType("time");

                    b.Property<Guid>("SequenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StepType")
                        .HasColumnType("int");

                    b.Property<string>("SubjectTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SequenceId");

                    b.HasIndex("TenantId", "SequenceId", "Order")
                        .IsUnique()
                        .HasDatabaseName("IX_ProspectingSteps_Sequence_Order");

                    b.ToTable("ProspectingSequenceSteps");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.SendLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BouncedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ClickedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ComplainedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeferredUntilUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliveredAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GenerationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MetadataJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OpenedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProspectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderMessageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RawPayloadJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RetryCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ScheduledAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SentAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("StepId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("GenerationId");

                    b.HasIndex("ProspectId");

                    b.HasIndex("StepId");

                    b.HasIndex("TenantId", "Provider", "ProviderMessageId")
                        .IsUnique()
                        .HasDatabaseName("IX_SendLogs_ProviderMessage")
                        .HasFilter("[ProviderMessageId] IS NOT NULL");

                    b.HasIndex("TenantId", "ProspectId", "Status", "ScheduledAtUtc")
                        .HasDatabaseName("IX_SendLogs_Tenant_Prospect_Status_Scheduled");

                    b.ToTable("ProspectingSendLogs");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Template", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Channel")
                        .HasColumnType("int");

                    b.Property<string>("CoreSchemaJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Lang")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name", "Lang", "Channel")
                        .IsUnique();

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("TenantId", "Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.MessageEvent", b =>
                {
                    b.HasOne("Pipelane.Domain.Entities.Message", "Message")
                        .WithMany("Events")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.EmailGeneration", b =>
                {
                    b.HasOne("Pipelane.Domain.Entities.Prospecting.ProspectingCampaign", "Campaign")
                        .WithMany("Generations")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Pipelane.Domain.Entities.Prospecting.Prospect", "Prospect")
                        .WithMany("Generations")
                        .HasForeignKey("ProspectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pipelane.Domain.Entities.Prospecting.ProspectingSequenceStep", "Step")
                        .WithMany("Generations")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Prospect");

                    b.Navigation("Step");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.Prospect", b =>
                {
                    b.HasOne("Pipelane.Domain.Entities.Prospecting.ProspectingCampaign", "Campaign")
                        .WithMany("Prospects")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Pipelane.Domain.Entities.Prospecting.ProspectingSequence", "Sequence")
                        .WithMany("Prospects")
                        .HasForeignKey("SequenceId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Campaign");

                    b.Navigation("Sequence");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.ProspectReply", b =>
                {
                    b.HasOne("Pipelane.Domain.Entities.Prospecting.EmailGeneration", "AutoReplyGeneration")
                        .WithMany()
                        .HasForeignKey("AutoReplyGenerationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Pipelane.Domain.Entities.Prospecting.ProspectingCampaign", "Campaign")
                        .WithMany("Replies")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Pipelane.Domain.Entities.Prospecting.Prospect", "Prospect")
                        .WithMany("Replies")
                        .HasForeignKey("ProspectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pipelane.Domain.Entities.Prospecting.SendLog", "SendLog")
                        .WithMany("Replies")
                        .HasForeignKey("SendLogId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Pipelane.Domain.Entities.Prospecting.ProspectingSequenceStep", "Step")
                        .WithMany("Replies")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AutoReplyGeneration");

                    b.Navigation("Campaign");

                    b.Navigation("Prospect");

                    b.Navigation("SendLog");

                    b.Navigation("Step");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.ProspectingCampaign", b =>
                {
                    b.HasOne("Pipelane.Domain.Entities.Prospecting.ProspectingSequence", "Sequence")
                        .WithMany("Campaigns")
                        .HasForeignKey("SequenceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sequence");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.ProspectingSequenceStep", b =>
                {
                    b.HasOne("Pipelane.Domain.Entities.Prospecting.ProspectingSequence", "Sequence")
                        .WithMany("Steps")
                        .HasForeignKey("SequenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sequence");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.SendLog", b =>
                {
                    b.HasOne("Pipelane.Domain.Entities.Prospecting.ProspectingCampaign", "Campaign")
                        .WithMany("Sends")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Pipelane.Domain.Entities.Prospecting.EmailGeneration", "Generation")
                        .WithMany("Sends")
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Pipelane.Domain.Entities.Prospecting.Prospect", "Prospect")
                        .WithMany("Sends")
                        .HasForeignKey("ProspectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pipelane.Domain.Entities.Prospecting.ProspectingSequenceStep", "Step")
                        .WithMany("Sends")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Campaign");

                    b.Navigation("Generation");

                    b.Navigation("Prospect");

                    b.Navigation("Step");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Message", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.EmailGeneration", b =>
                {
                    b.Navigation("Sends");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.Prospect", b =>
                {
                    b.Navigation("Generations");

                    b.Navigation("Replies");

                    b.Navigation("Sends");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.ProspectingCampaign", b =>
                {
                    b.Navigation("Generations");

                    b.Navigation("Prospects");

                    b.Navigation("Replies");

                    b.Navigation("Sends");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.ProspectingSequence", b =>
                {
                    b.Navigation("Campaigns");

                    b.Navigation("Prospects");

                    b.Navigation("Steps");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.ProspectingSequenceStep", b =>
                {
                    b.Navigation("Generations");

                    b.Navigation("Replies");

                    b.Navigation("Sends");
                });

            modelBuilder.Entity("Pipelane.Domain.Entities.Prospecting.SendLog", b =>
                {
                    b.Navigation("Replies");
                });
#pragma warning restore 612, 618
        }
    }
}

